input {
	file {
		path => ['/var/log/ceilometer/ceilometer-*.log']
		tags => ['openstack', 'ceilometer']
		start_position => "beginning"
		type => "ceilometer"
		codec => multiline {
			pattern => "^%{OPENSTACK_TRACE_BLOCK}"
			what => "previous"
		}
	}
}

filter {
	grok {
		match => { "message" => "%{OPENSTACK_NORMAL}%{GREEDYDATA:message}?" }
		overwrite => ["message"]
	}

	mutate {
		gsub => ['path', "/.+/", ""]
	}

	date {
		match => ["logdate", "yyyy-MM-dd HH:mm:ss.SSS"]
	}

	if [loglevel] =~ "(?:ALERT|TRACE||WARN(?:ING)?|ERROR|CRIT(?:ICAL)?|FATAL|SEVERE|EMERG(?:ENCY)?)" {
		mutate {
			add_tag => ["something_wrong"]
		}
	}

	if [path] == "ceilometer-api.log" {
		if [module] == "werkzeug" {
			if "Running on" not in [message] {
				grok {
					match => {
						message => "%{OPENSTACK_CEILOMETER_API}"
						add_field => ["api", "ceilometer"]
						add_tag => ["apimetrics"]
					}

				}
			}
		} 

	}
	if [module] == "oslo.messaging._drivers.impl_rabbit" {
		if "Errno 32" in [message] {
			mutate {
				add_field => ["error_type", "MQ-broken-pipe"]
			}
		}
		if "Errno 104" in [message] {
			mutate {
				add_field => ["error_type", "MQ-peer-rest"]
			}
		}
		if "Errno 104" in [message] {
			mutate {
				add_field => ["error_type", "MQ-connrefused"]
			}
		}
	}

}

output {
	redis {
		data_type => "list"
		key => "dev-openstack-liberty"
		host => "elk-redis-server"
	}
}
