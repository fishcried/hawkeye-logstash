input {
	# keystone
	file {
		path => ['/var/log/keystone/keystone.log']
		tags => ['openstack', 'oslofmt', 'keystone', 'keystone-api']
		start_position => "beginning"
		type => "keystone"
  }

	# neutron
	file {
		path => ['/var/log/neutron/dhcp-agent.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-dhcp-agent']
		start_position => "beginning"
		type => "neutron"
	}
	file {
		path => ['/var/log/neutron/neutron-server.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-server']
		start_position => "beginning"
		type => "neutron"
	}

	file {
		path => ['/var/log/neutron/neutron-metadata-agent.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-metadata-agent']
		start_position => "beginning"
		type => "neutron"
	}

	file {
		path => ['/var/log/neutron/openvswitch-agent.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-openvswitch-agent']
		start_position => "beginning"
		type => "neutron"
	}

	file {
		path => ['/var/log/neutron/neutron-lbaasv2-agent.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-lbaasv2-agent']
		start_position => "beginning"
		type => "neutron"
	}

	file {
		path => ['/var/log/neutron/vpn_agent.log',
		         '/var/log/neutron/vpn-agent.log']
		tags => ['openstack','oslofmt', 'neutron', 'neutron-vpn-agent']
		start_position => "beginning"
		type => "neutron"
	}

	# nova
	file {
		path => ['/var/log/nova/nova-api.log']
		tags => ['openstack','oslofmt', 'oslofmt', 'nova', 'nova-api']
		start_position => "beginning"
		type => "nova"
	}

	file {
		path => ['/var/log/nova/nova-cert.log']
		tags => ['openstack', 'oslofmt', 'nova', 'nova-cert']
		start_position => "beginning"
		type => "nova"
	}

	file {
		path => ['/var/log/nova/nova-conductor.log']
		tags => ['openstack', 'oslofmt', 'nova', 'nova-conductor']
		start_position => "beginning"
		type => "nova"
	}

	file {
		path => ['/var/log/nova/nova-consoleauth.log']
		tags => ['openstack', 'oslofmt', 'nova', 'nova-consoleauth']
		start_position => "beginning"
		type => "nova"
	}
	file {
		path => ['/var/log/nova/nova-novncproxy.log']
		tags => ['openstack', 'oslofmt', 'nova', 'nova-novncproxy']
		start_position => "beginning"
		type => "nova"
	}
	file {
		path => ['/var/log/nova/nova-scheduler.log']
		tags => ['openstack', 'oslofmt',  'nova', 'nova-scheduler']
		start_position => "beginning"
		type => "nova"
	}
	file {
		path => ['/var/log/nova/nova-compute.log']
		tags => ['openstack', 'oslofmt', 'nova', 'nova-compute']
		start_position => "beginning"
		type => "nova"
	}
}

filter {
	if "oslofmt" in [tags] {
		# handle the message general
		grok {
			match => { "message" => "(?m)^%{TIMESTAMP_ISO8601:logdate}%{SPACE}%{NUMBER:pid}?%{SPACE}?(?<loglevel>AUDIT|CRITICAL|DEBUG|INFO|TRACE|WARNING|ERROR) \[?\b%{NOTSPACE:module}\b\]?%{SPACE}?%{GREEDYDATA:message}?" }
			overwrite => ["message"]
			add_field => { "received_at" => "%{@timestamp}" }
		}
		# todo about the date
		date {
			match => ["logdate", "yyyy-MM-dd HH:mm:ss.SSS"]
		}


		# handel details

		if "nova-api" in [tags] { # nova api
			if [module] == "nova.osapi_compute.wsgi.server" {
				mutate {
					gsub => ['message', "\"", ""]
				}
				grok {
					match => { "message" => "\[req\-%{NOTSPACE:requestid} %{NOTSPACE:requestid} %{NOTSPACE:requestid} \- \- \-\] %{NOTSPACE:requesterip} %{NOTSPACE:method} %{NOTSPACE:url_path} %{NOTSPACE:http_ver} status: %{NUMBER:response} len: %{NUMBER:bytes:int} time: %{NUMBER:seconds:float}" }
					match => { "message" => "\[\-\] %{NOTSPACE:requesterip} %{NOTSPACE:method} %{NOTSPACE:url_path} %{NOTSPACE:http_ver} status: %{NUMBER:response} len: %{NUMBER:bytes:int} time: %{NUMBER:seconds:float}" }
					add_field => ["api", "nova"]
					add_tag => ["apimetrics"]
				}
			}
		} else if "neutron-server" in [tags] { # neutron api
			if [module] == "neutron.wsgi" {
				if "accepted" not in [message] and "timed out" not in [message] {
					mutate {
						gsub => ['message', "\"", ""]
					}
					grok {
						######################################33
						# 2015-11-04 06:45:25.532 35299 INFO neutron.wsgi [req-3c8f90f8-36fc-4f46-8807-0d79fb03b022 386d90de98cb445fad22c7c840ae7595 a49bd0a3d9fc43e19bd584b7bb4bf8c8 - - -] 192.168.250.13 - - [04/Nov/2015 06:45:25] "GET /v2.0/ports.json?tenant_id=bdab536c9b344a6d927b5235dd2b7056&device_id=465c5148-e64f-4208-bdf1-9adf6cc0dafe HTTP/1.1" 200 1148 0.037792
						######################################33
						match => { "message" => "\[req\-%{NOTSPACE:requestid} %{NOTSPACE:requestid} %{NOTSPACE:requestid} \- \- \-\] %{NOTSPACE:requesterip} \- \- \[%{NOTSPACE:req_date} %{NOTSPACE:req_time}\] %{NOTSPACE:method} %{NOTSPACE:url_path} %{NOTSPACE:http_ver} %{NUMBER:response} %{NUMBER:bytes:int} %{NUMBER:seconds:float}" }
						match => { "message" => "\[req\-%{NOTSPACE:requestid} %{NOTSPACE:requestid} %{NOTSPACE:requestid} \- \- \-\] %{NOTSPACE:requesterip} \- \- \[%{NOTSPACE:req_date} %{NOTSPACE:req_time}\] %{NOTSPACE:method} %{NOTSPACE:url_path} %{NOTSPACE:http_ver} %{NUMBER:response} %{NUMBER:bytes:int} %{NUMBER:seconds:float}" }
						add_field => ["api", "neutron"]
						add_tag => ["apimetrics"]
					}
				}
			}
		} else if  "keystone-api" in [tags] {
			if [module] == "eventlet.wsgi.server" {
			    mutate {
                    gsub => ['message', "\"", ""]
			    }
			    grok {
				match => { "message" => "\[req\-%{NOTSPACE:requestid} \- \- \- \- \-\] %{NOTSPACE:requesterip} \- \- \[%{NOTSPACE:req_date} %{NOTSPACE:req_time}\] %{NOTSPACE:method} %{NOTSPACE:url_path} %{NOTSPACE:http_ver} %{NUMBER:response} %{NUMBER:bytes:int} %{NUMBER:seconds:float}" }
				add_field => ["api", "keystone"]
				add_tag => ["apimetrics"]
			    }
			}
        }
	} 
}


output {
	redis {
		data_type => "list"
		key => "openstack"
		host => "192.168.252.153"
	}
}
